{"version":3,"sources":["components/Container/Container.jsx","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-reducer.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","components/Phonebook/Phonebook.jsx","App.js","redux/store.js","index.js"],"names":["Container","children","className","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","dispatch","get","then","data","catch","error","contact","post","id","delete","contactsArray","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalize","toLowerCase","el","name","includes","createReducer","_","payload","loading","combineReducers","ContactForm","number","message","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","newContact","props","reset","find","alert","some","onSubmit","this","htmlFor","nameInputId","type","pattern","title","placeholder","onChange","required","Component","connect","contactsSelectors","contactsOperations","Filter","target","protoType","PropTypes","string","func","ContactList","onDelete","map","onClick","Phonebook","fetchContacts","length","App","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08251997.chunk.js","sourcesContent":["import './Container.css';\n\nconst Container = ({ children }) => {\n  return <div className=\"Container\">{children}</div>;\n};\n\nexport default Container;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const changeFilter = createAction('phonebook/FILTER');\n","import axios from 'axios';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = contact => dispatch => {\n  dispatch(addContactsRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => {\n      dispatch(addContactsSuccess(data));\n    })\n    .catch(error => dispatch(addContactsError(error)));\n};\n\nconst deleteContacts = id => dispatch => {\n  dispatch(deleteContactsRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => {\n      dispatch(deleteContactsSuccess(id));\n    })\n    .catch(error => dispatch(deleteContactsError(error)));\n};\n\nexport default { fetchContacts, addContact, deleteContacts };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst contactsArray = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\n// мемоізація //\nconst getVisibleContacts = createSelector(\n  [contactsArray, getFilter],\n  (contacts, filter) => {\n    const normalize = filter.toLowerCase();\n    return contacts.filter(el => el.name.toLowerCase().includes(normalize));\n  },\n);\n\nexport default {\n  contactsArray,\n  getFilter,\n  getVisibleContacts,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  changeFilter,\n} from './phonebook-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(el => el.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  loading,\n  filter,\n  error,\n});\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/phonebook';\nimport { contactsSelectors } from '../../redux/phonebook';\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    message: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { contacts } = this.props;\n    const { name, number, message } = this.state;\n    let newContact;\n    this.reset();\n    if (contacts.find(el => el.name.toLowerCase() === name.toLowerCase())) {\n      return alert(`${name} is already in contacts`);\n    } else if (contacts.some(el => el.number === number)) {\n      return alert(`Number ${number} is already in contacts`);\n    } else {\n      newContact = {\n        name: name,\n        number: number,\n        message: message,\n      };\n    }\n    return this.props.onSubmit(newContact);\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '', message: '' });\n  };\n\n  render() {\n    const { name, number, message } = this.state;\n    return (\n      <div className=\"phonebook\">\n        <form onSubmit={this.handleSubmit} className=\"phonebook-form\">\n          <div className=\"phonebook-input-fielsds\">\n            <label htmlFor={this.nameInputId} className=\"phonebook-label\">\n              <input\n                className=\"phonebook-input\"\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                value={name}\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                placeholder=\"name\"\n                onChange={this.handleChange}\n                required\n              />\n            </label>\n            <label className=\"phonebook-label\">\n              <input\n                className=\"phonebook-input\"\n                type=\"tel\"\n                name=\"number\"\n                value={number}\n                pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n                placeholder=\"number\"\n                title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n                onChange={this.handleChange}\n                required\n              />\n            </label>\n          </div>\n          <div className=\"msg\">\n            <textarea\n              placeholder=\"more information\"\n              className=\"textarea\"\n              name=\"message\"\n              value={message}\n              onChange={this.handleChange}\n            ></textarea>\n            <button type=\"submit\" className=\"btn\">\n              Add contact\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.contactsArray(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(contactsOperations.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  message: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { contactsSelectors } from '../../redux/phonebook';\nimport { changeFilter } from '../../redux/phonebook';\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <div className=\"filter\">\n      <label>\n        <input\n          className=\"filter-input\"\n          type=\"text\"\n          value={filter}\n          placeholder=\"find contacts by name...\"\n          onChange={changeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.protoType = {\n  filter: PropTypes.string,\n  changeFilter: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <>\n      <ul className=\"contact-list\">\n        {contacts.map(el => (\n          <li key={el.id} className=\"contact-item\">\n            {el.name + ':'}\n            <span className=\"contact-span\">{el.number}</span>\n            <p className=\"contact-message\">{el.message}</p>\n            <button onClick={() => onDelete(el.id)} className=\"btn\">\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDelete: PropTypes.func,\n};\n","import { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/phonebook';\nimport { contactsSelectors } from '../../redux/phonebook';\nimport ContactList from './ContactList';\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsOperations.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/phonebook';\nimport { Component } from 'react';\nimport { contactsSelectors } from '../../redux/phonebook';\n\nclass Phonebook extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    const { items } = this.props;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        {items.length > 0 && (\n          <>\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n          </>\n        )}\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  items: contactsSelectors.contactsArray(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import './App.css';\nimport { Component } from 'react';\n\nimport Container from './components/Container/Container';\nimport Phonebook from './components/Phonebook';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Phonebook />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}