{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","components/Navigation/Navigation.module.css","components/AuthNav/Auth.module.css","redux/auth/auth-actions.js","redux/phonebook/phonebook-reducer.js","components/Container/Container.module.css","components/UserMenu/UserMenu.module.css","components/Container/Container.jsx","components/PrivateRoute/PrivaeRoute.js","components/PublicRoute/PublicRoute.js","components/Navigation/Navigation.js","images/online2.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","App.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","token","headers","common","Authorization","register","state","dispatch","a","authActions","registerRequest","post","response","data","registerSuccess","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","getIsAuthenticated","isAuthenticated","getUserName","user","name","initialUserState","email","password","createReducer","_","payload","setError","error","combineReducers","module","exports","items","filter","el","id","loading","Container","children","className","s","connect","authSelectors","Component","component","redirectTo","routeProps","render","props","to","restricted","Navigation","NavigationItem","exact","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","UserMenu","src","alt","width","type","onClick","AuthNav","AuthItem","header","HomeView","lazy","RegisterView","LoginView","PhonebookView","App","this","onGetCurrentUser","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","white","storage","store","configureStore","reducer","persistReducer","authReducer","contacts","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f634caad.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const changeFilter = createAction('phonebook/FILTER');\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = state => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', state);\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = state => async dispatch => {\n  dispatch(authActions.loginRequest());\n  try {\n    const response = await axios.post('/users/login', state);\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n// state.auth.token\n\nexport default {\n  register,\n  logIn,\n  logOut,\n  getCurrentUser,\n};\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUserName = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUserName,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null, password: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n  isAuthenticated,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__1tTPb\",\"NavigationItem\":\"Navigation_NavigationItem__3SoDy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthItem\":\"Auth_AuthItem__2OFf1\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  changeFilter,\n} from './phonebook-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(el => el.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  loading,\n  filter,\n  error,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserMenu\":\"UserMenu_UserMenu__rndIU\"};","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.Container}>{children}</div>;\n};\n\nexport default Container;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import s from './Navigation.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\nimport { connect } from 'react-redux';\n\nconst Navigation = ({ isAuthenticated }) => {\n  return (\n    <div className={s.Navigation}>\n      <NavLink className={s.NavigationItem} exact to=\"/\">\n        Home\n      </NavLink>\n      {isAuthenticated && (\n        <NavLink className={s.NavigationItem} exact to=\"/contacts\">\n          Phonebook\n        </NavLink>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\n// const mapDispatchToProps = {\n\n// }\n\nexport default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/online2.4209adb7.png\";","import defaultAvatar from '../../images/online2.png';\nimport { connect } from 'react-redux';\nimport s from './UserMenu.module.css';\nimport { authOperations, authSelectors } from '../../redux/auth';\n\nconst UserMenu = ({ avatar, name, onLogout }) => {\n  return (\n    <div className={s.UserMenu}>\n      <p>Welcome, {name} </p>\n\n      <img src={avatar} alt=\"userFoto\" width=\"120\" />\n      <button type=\"button\" onClick={onLogout}>\n        Log out\n      </button>\n    </div>\n  );\n};\nconst mapStateToProps = state => ({\n  avatar: defaultAvatar,\n  name: authSelectors.getUserName(state),\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import { NavLink } from 'react-router-dom';\nimport s from './Auth.module.css';\n\nconst AuthNav = () => {\n  return (\n    <div>\n      <nav>\n        <NavLink className={s.AuthItem} exact to=\"/register\">\n          Registration\n        </NavLink>\n        <NavLink className={s.AuthItem} exact to=\"/login\">\n          Login\n        </NavLink>\n      </nav>\n    </div>\n  );\n};\n\nexport default AuthNav;\n","import s from './AppBar.module.css';\nimport { connect } from 'react-redux';\n\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\n\nimport { authSelectors } from '../../redux/auth';\n\nconst AppBar = ({ isAuthenticated }) => {\n  return (\n    <header className={s.header}>\n      <Navigation />\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import './App.css';\nimport { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\n\nimport Container from './components/Container/Container';\nimport PrivateRoute from './components/PrivateRoute/PrivaeRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\nimport AppBar from './components/AppBar';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst PhonebookView = lazy(() => import('./views/PhonebookView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <AppBar />\n          {/* <Modal /> */}\n          <Suspense fallback={<p>Loading...</p>}>\n            <Switch>\n              <PublicRoute exact path=\"/\" component={HomeView} />\n              <PublicRoute\n                path=\"/login\"\n                restricted\n                redirectTo={'/'}\n                component={LoginView}\n              />\n              <PublicRoute\n                path=\"/register\"\n                restricted\n                redirectTo={'/'}\n                component={RegisterView}\n              />\n              <PrivateRoute\n                path=\"/contacts\"\n                redirectTo={'/login'}\n                component={PhonebookView}\n              />\n            </Switch>\n          </Suspense>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\n\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport phonebookReducer from './phonebook/phonebook-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  white: ['token'],\n  storage,\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}