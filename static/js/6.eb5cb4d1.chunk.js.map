{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Modal/Modal.jsx","components/ContactList/ContactList.jsx","images/face.png","components/ContactList/ContactList.container.js","views/PhonebookView.jsx"],"names":["module","exports","fetchContacts","dispatch","a","fetchContactsRequest","axios","get","response","fetchContactsSuccess","data","fetchContactsError","message","addContact","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContacts","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","changeContact","changeContactRequest","patch","changeContactSuccess","changeContactError","contactsArray","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalize","toLowerCase","el","name","includes","ContactForm","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","newContact","props","reset","find","alert","some","onSubmit","this","Container","maxWidth","className","s","phonebookInputFields","htmlFor","nameInputId","Input","phonebookInput","startAdornment","InputAdornment","position","type","pattern","title","placeholder","onChange","required","Button","color","variant","Component","connect","contactsSelectors","contactsOperations","Filter","changeFilter","filterInput","target","protoType","PropTypes","string","func","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","TransitionsModal","classes","React","useState","open","setOpen","size","onClick","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","ContactList","onDelete","avatar","CssBaseline","cardCrid","Grid","container","map","item","xs","sm","Card","card","CardMedia","cardMedia","image","CardContent","cardContent","Typography","CardActions","img","PhonebookView","length","mapDispatchToProps"],"mappings":"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","file":"static/js/6.eb5cb4d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookInputFields\":\"ContactForm_phonebookInputFields__1DCHk\",\"phonebookInput\":\"ContactForm_phonebookInput__2p2Aq\",\"filterInput\":\"ContactForm_filterInput__dyhuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__u16Kg\"};","import axios from 'axios';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeContactRequest,\n  changeContactSuccess,\n  changeContactError,\n} from './phonebook-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const response = await axios.get('/contacts');\n\n    dispatch(fetchContactsSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst addContact = contact => async dispatch => {\n  dispatch(addContactRequest());\n\n  try {\n    const response = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(response.data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nconst deleteContacts = id => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    const response = await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n\nconst changeContact = id => async dispatch => {\n  dispatch(changeContactRequest());\n  try {\n    const response = await axios.patch(`/contacts/${id}`);\n    dispatch(changeContactSuccess(id));\n  } catch (error) {\n    dispatch(changeContactError(error.message));\n  }\n};\n\nexport default { fetchContacts, addContact, deleteContacts, changeContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst contactsArray = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\n// мемоізація //\nconst getVisibleContacts = createSelector(\n  [contactsArray, getFilter],\n  (contacts, filter) => {\n    const normalize = filter.toLowerCase();\n    return contacts.filter(el => el.name.toLowerCase().includes(normalize));\n  },\n);\n\nexport default {\n  contactsArray,\n  getFilter,\n  getVisibleContacts,\n};\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/phonebook';\nimport { contactsSelectors } from '../../redux/phonebook';\nimport s from './ContactForm.module.css';\n\nimport { Container, Button, Input, InputAdornment } from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CallIcon from '@material-ui/icons/Call';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { contacts } = this.props;\n    const { name, number } = this.state;\n    let newContact;\n    this.reset();\n    if (contacts.find(el => el.name.toLowerCase() === name.toLowerCase())) {\n      return alert(`${name} is already in contacts`);\n    } else if (contacts.some(el => el.number === number)) {\n      return alert(`Number ${number} is already in contacts`);\n    } else {\n      newContact = {\n        name: name,\n        number: number,\n      };\n    }\n    return this.props.onSubmit(newContact);\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Container maxWidth=\"sm\">\n        <form onSubmit={this.handleSubmit}>\n          <div className={s.phonebookInputFields}>\n            <label htmlFor={this.nameInputId} className=\"phonebook-label\">\n              <Input\n                className={s.phonebookInput}\n                startAdornment={\n                  <InputAdornment position=\"start\">\n                    <AccountCircleIcon />\n                  </InputAdornment>\n                }\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                value={name}\n                title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example: Jacob Mercer...\"\n                placeholder=\"name\"\n                onChange={this.handleChange}\n                required\n              />\n            </label>\n            <label className=\"phonebook-label\">\n              <Input\n                startAdornment={\n                  <InputAdornment position=\"start\">\n                    <CallIcon />\n                  </InputAdornment>\n                }\n                className={s.phonebookInput}\n                type=\"tel\"\n                name=\"number\"\n                value={number}\n                pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n                placeholder=\"number\"\n                title=\"The phone number must be 11-12 digits long and can contain numbers, spaces, dashes, pot-bellied brackets and can start with +\"\n                onChange={this.handleChange}\n                required\n              />\n            </label>\n            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n              Add contact\n            </Button>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.contactsArray(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(contactsOperations.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nimport { connect } from 'react-redux';\nimport { contactsSelectors } from '../../redux/phonebook';\nimport { changeFilter } from '../../redux/phonebook';\n\nimport { Container, Input, InputAdornment } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <Container maxWidth=\"sm\">\n      <div>\n        <label>\n          <Input\n            className={s.filterInput}\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            }\n            type=\"text\"\n            value={filter}\n            placeholder=\"find contacts by name...\"\n            onChange={changeFilter}\n          />\n        </label>\n      </div>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.protoType = {\n  filter: PropTypes.string,\n  changeFilter: PropTypes.func,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Modal, Button } from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport ContactForm from '../ContactForm';\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function TransitionsModal({ id }) {\n  const classes = useStyles();\n  // const { id } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        color=\"primary\"\n        variant=\"contained\"\n        type=\"button\"\n        onClick={handleOpen}\n      >\n        Edit\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            {/* <ChangeContact id={id} /> */}\n            <ContactForm />\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\n//////////////////////////\n\n//import { Component } from 'react';\n//import { createPortal } from 'react-dom';\n\n//import s from './Modal.module.css';\n//const modalRoot = document.querySelector('#modal-root');\n\n// class ModalWindow extends Component {\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeyDown);\n//   }\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handleKeyDown);\n//   }\n//   handleKeyDown = e => {\n//     if (e.code === 'Escape') {\n//       this.props.onClose();\n//     }\n//   };\n\n//   handleBackdropClick = event => {\n//     if (event.currentTarget === event.target) {\n//       this.props.onClose();\n//     }\n//   };\n\n//   render() {\n//     <Modal\n//       open={open}\n//       onClose={handleClose}\n//       aria-labelledby=\"simple-modal-title\"\n//       aria-describedby=\"simple-modal-description\"\n//     ></Modal>;\n//     // return createPortal(\n//     //   <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}>\n//     //     <div className=\"Modal__content\">{this.props.children}</div>\n//     //   </div>,\n//     //   modalRoot,\n//   }\n// }\n\n//export default ModalWindow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  CssBaseline,\n  Button,\n  Grid,\n  Container,\n  Typography,\n  CardActions,\n} from '@material-ui/core';\n\nimport useStyles from '../../styles';\n\nimport TransitionsModal from '../Modal/Modal';\n\nconst ContactList = ({ contacts, onDelete, avatar }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"md\" className={classes.cardCrid}>\n        <Grid container spacing={4}>\n          {contacts.map(el => (\n            <Grid key={el.id} item xs={12} sm={6}>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={avatar}\n                  title=\"imgTitle\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography variant=\"h5\"> {el.name + ':'} </Typography>\n                  <Typography variant=\"h5\">{el.number}</Typography>\n                  <Typography variant=\"h4\">{el.message}</Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    onClick={() => onDelete(el.id)}\n                    size=\"small\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                  >\n                    Delete\n                  </Button>\n                  {/* <Button\n                    // onClick={handleOpen}\n                    size=\"small\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                  >\n                    Edit\n                  </Button> */}\n                  <TransitionsModal id={el.id} />\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDelete: PropTypes.func,\n};\n","export default __webpack_public_path__ + \"static/media/face.c3d96184.png\";","import { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/phonebook';\nimport { contactsSelectors } from '../../redux/phonebook';\nimport ContactList from './ContactList';\nimport img from '../../images/face.png';\nimport { changeContactSuccess } from '../../redux/phonebook/phonebook-actions';\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n  avatar: img,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsOperations.deleteContacts(id)),\n  //onChange: id => dispatch(contactsOperations.changeContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\n\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../redux/phonebook';\nimport { Component } from 'react';\nimport { contactsSelectors } from '../redux/phonebook';\n\nclass PhonebookView extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { items } = this.props;\n    return (\n      <>\n        <ContactForm />\n        {items.length > 0 && (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        )}\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  items: contactsSelectors.contactsArray(state),\n});\n\nconst mapDispatchToProps = {\n  fetchContacts: contactsOperations.fetchContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookView);\n"],"sourceRoot":""}